{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://xregistry.io/schema/endpoints",
  "properties": {
    "endpoints": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/endpoint"
      }
    }
  },
  "definitions": {
    "definition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "epoch": {
          "type": "integer"
        },
        "self": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        },
        "documentation": {
          "type": "string",
          "format": "uri"
        },
        "labels": {
          "type": "object"
        },
        "createdby": {
          "type": "string"
        },
        "createdon": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedby": {
          "type": "string"
        },
        "modifiedon": {
          "type": "string",
          "format": "date-time"
        },
        "baseDefinitionUrl": {
          "type": "string",
          "format": "uri",
          "description": "Reference to a base definition for this definition, either via a (relative) URL or a fragment identifier. The base definition is overridden by this definition. If not present, this definition does not override any base definition."
        }
      },
      "required": [
        "id"
      ],
      "oneOf": [
        {
          "properties": {
            "binding": {
              "type": "string",
              "description": "Binding identifier. This attribute MUST be the same as the 'binding' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups.",
              "enum": [
                "AMQP/1.0"
              ]
            },
            "message": {
              "type": "object",
              "description": "AMQP message metadata constraints.",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {
                    "message-id": {
                      "type": "object",
                      "description": "AMQP message-id.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP message-id value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP message-id required."
                        }
                      }
                    },
                    "user-id": {
                      "type": "object",
                      "description": "AMQP user-id.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP user-id value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP user-id required."
                        }
                      }
                    },
                    "to": {
                      "type": "object",
                      "description": "AMQP to.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP to value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP to required."
                        }
                      }
                    },
                    "subject": {
                      "type": "object",
                      "description": "AMQP subject.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP subject value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP subject required."
                        }
                      }
                    },
                    "reply-to": {
                      "type": "object",
                      "description": "AMQP reply-to.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP reply-to value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP reply-to required."
                        }
                      }
                    },
                    "correlation-id": {
                      "type": "object",
                      "description": "AMQP correlation-id.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP correlation-id value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP correlation-id required."
                        }
                      }
                    },
                    "content-type": {
                      "type": "object",
                      "description": "AMQP content-type.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP content-type value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP content-type required."
                        }
                      }
                    },
                    "content-encoding": {
                      "type": "object",
                      "description": "AMQP content-encoding.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP content-encoding value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP content-encoding required."
                        }
                      }
                    },
                    "absolute-expiry-time": {
                      "type": "object",
                      "description": "AMQP absolute-expiry-time.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP absolute-expiry-time value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP absolute-expiry-time required."
                        }
                      }
                    },
                    "group-id": {
                      "type": "object",
                      "description": "AMQP group-id.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP group-id value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP group-id required."
                        }
                      }
                    },
                    "group-sequence": {
                      "type": "object",
                      "description": "AMQP group-sequence.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP group-sequence value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP group-sequence required."
                        }
                      }
                    },
                    "reply-to-group-id": {
                      "type": "object",
                      "description": "AMQP reply-to-group-id.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "AMQP reply-to-group-id value template."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "AMQP reply-to-group-id required."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "binding"
          ]
        },
        {
          "properties": {
            "binding": {
              "type": "string",
              "description": "Binding identifier. This attribute MUST be the same as the 'binding' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups.",
              "enum": [
                "MQTT/3.1.1"
              ]
            },
            "message": {
              "type": "object",
              "description": "MQTT message metadata constraints."
            }
          },
          "required": [
            "binding"
          ]
        },
        {
          "properties": {
            "binding": {
              "type": "string",
              "description": "Binding identifier. This attribute MUST be the same as the 'binding' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups.",
              "enum": [
                "MQTT/5.0"
              ]
            },
            "message": {
              "type": "object",
              "description": "MQTT message metadata constraints."
            }
          },
          "required": [
            "binding"
          ]
        },
        {
          "properties": {
            "binding": {
              "type": "string",
              "description": "Binding identifier. This attribute MUST be the same as the 'binding' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups.",
              "enum": [
                "KAFKA"
              ]
            },
            "message": {
              "type": "object",
              "description": "The Apache Kafka message metadata constraints."
            }
          },
          "required": [
            "binding"
          ]
        },
        {
          "properties": {
            "binding": {
              "type": "string",
              "description": "Binding identifier. This attribute MUST be the same as the 'binding' attribute of the definition group, but is not automatically inherited because definitions may be cross-referenced across groups.",
              "enum": [
                "HTTP"
              ]
            },
            "message": {
              "type": "object",
              "description": "The HTTP message metadata constraints."
            }
          },
          "required": [
            "binding"
          ]
        }
      ]
    },
    "endpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "epoch": {
          "type": "integer"
        },
        "self": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        },
        "documentation": {
          "type": "string",
          "format": "uri"
        },
        "labels": {
          "type": "object"
        },
        "format": {
          "type": "string",
          "description": "Endpoint message format identifier. If set, all definitions MUST use this format value."
        },
        "createdby": {
          "type": "string"
        },
        "createdon": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedby": {
          "type": "string"
        },
        "modifiedon": {
          "type": "string",
          "format": "date-time"
        },
        "config": {
          "type": "object",
          "description": "Configuration information for this endpoint",
          "properties": {
            "authorization": {
              "type": "array",
              "description": "Authorization options. These are hints for the adapter for interacting with the authorization endpoint. This is not a credentials configuration.",
              "items": {
                "type": "object"
              }
            },
            "endpoints": {
              "type": "array",
              "description": "The network addresses that are for communication with the endpoint. The endpoints are ordered by preference, with the first endpoint being the preferred endpoint. Some protocol implementations might not support multiple endpoints, in which case all but the first endpoint might be ignored. Whether the URI just identifies a network host or links directly to a resource managed by the network host is protocol specific.",
              "items": {
                "type": "string",
                "format": "uri"
              }
            },
            "strict": {
              "type": "boolean",
              "description": "If `true`, the endpoint metadata represents a public, live endpoint that is available for communication and a strict validator MAY test the liveness of the endpoint."
            }
          },
          "required": [
            "protocol"
          ],
          "oneOf": [
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "AMQP/1.0"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "AMQP 1.0 connection options",
                  "properties": {
                    "node": {
                      "type": "string",
                      "description": "The AMQP node name. Commonly the name of a queue or a topic."
                    },
                    "durable": {
                      "type": "boolean",
                      "description": "The AMQP durable flag. Whether the node is durable or transient."
                    },
                    "link-properties": {
                      "type": "object",
                      "description": "An optional map of AMQP link properties to use with the endpoint",
                      "items": {
                        "type": "object"
                      }
                    },
                    "connection-properties": {
                      "type": "object",
                      "description": "An optional map of AMQP connection properties to use with the endpoint",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Connection property name"
                        },
                        "value": {
                          "type": "string",
                          "description": "Connection property value"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    },
                    "distribution-mode": {
                      "type": "string",
                      "description": "The AMQP distribution mode for receivers. Can be 'move' or 'copy'.  A value of 'move' indicates an exclusive lock on the message. A value of 'copy' indicates a non-exclusive lock on the message."
                    }
                  },
                  "additionalProperties": {
                    "type": "string",
                    "description": "Further options to configure the AMQP 1.0 client"
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "MQTT/5.0"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "MQTT 5.0 connection options",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "The MQTT topic path"
                    },
                    "qos": {
                      "type": "integer",
                      "description": "The MQTT QoS level. May be 0, 1, or 2."
                    },
                    "retain": {
                      "type": "boolean",
                      "description": "The MQTT retain flag to use for publishers on ths endpoint"
                    },
                    "clean-session": {
                      "type": "boolean",
                      "description": "The MQTT clean session flag to use for publishers on this endpoint"
                    },
                    "will-topic": {
                      "type": "string",
                      "description": "The MQTT will topic to configure for publishers on this endpoint"
                    },
                    "will-message": {
                      "type": "string",
                      "format": "uri",
                      "description": "The MQTT will message definition to configure for publishers on this endpoint"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "MQTT/3.1.1"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "MQTT 3.1.1 connection options",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "MQTT topic path"
                    },
                    "qos": {
                      "type": "integer",
                      "description": "The MQTT QoS level\u00c3\u00b6. May be 0, 1, or 2."
                    },
                    "retain": {
                      "type": "boolean",
                      "description": "The MQTT retain flag to use for publishers on ths endpoint"
                    },
                    "clean-session": {
                      "type": "boolean",
                      "description": "The MQTT clean session flag to use for publishers on this endpoint"
                    },
                    "will-topic": {
                      "type": "string",
                      "description": "The MQTT will topic to configure for publishers on this endpoint"
                    },
                    "will-message": {
                      "type": "string",
                      "format": "uri",
                      "description": "The MQTT will message definition to configure for publishers on this endpoint"
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "HTTP"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "HTTP options. These apply to all HTTP versions since the application model is the same across versions.",
                  "properties": {
                    "method": {
                      "type": "string",
                      "description": "The HTTP method name"
                    },
                    "headers": {
                      "type": "array",
                      "description": "HTTP headers to use with the endpoint. The same header may be specified multiple times with different values. The HTTP header names are case insensitive.",
                      "items": {
                        "type": "object"
                      }
                    },
                    "query": {
                      "type": "object",
                      "description": "HTTP query parameters",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "KAFKA"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "Apache Kafka options",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "Apache Kafka topic name"
                    },
                    "acks": {
                      "type": "integer",
                      "description": "The Apache Kafka acks setting to use. If no acks setting is specified, the default is -1."
                    },
                    "key": {
                      "type": "string",
                      "format": "base64",
                      "description": "The Apache Kafka record key"
                    },
                    "consumer-group": {
                      "type": "string",
                      "description": "The Apache Kafka consumer group name to use for consumers"
                    },
                    "partition": {
                      "type": "integer",
                      "description": "Optional. The Apache Kafka partition number to use when writing to or receiving from Apache Kafka"
                    },
                    "headers": {
                      "type": "object",
                      "description": "The Apache Kafka headers for publishers on this endpoint",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "topic"
                  ]
                }
              },
              "required": [
                "protocol"
              ]
            },
            {
              "properties": {
                "protocol": {
                  "type": "string",
                  "description": "endpoint protocol identifier",
                  "enum": [
                    "NATS"
                  ]
                },
                "options": {
                  "type": "object",
                  "description": "NATS options",
                  "properties": {
                    "subject": {
                      "type": "string",
                      "description": "The NATS subject"
                    }
                  },
                  "required": [
                    "subject"
                  ]
                }
              },
              "required": [
                "protocol"
              ]
            }
          ]
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/definition"
          }
        }
      },
      "required": [
        "id",
        "format"
      ]
    }
  }
}